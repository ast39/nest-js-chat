services:

  postgres:
    image: postgres:14-alpine
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: ${API_CONTAINER}
    restart: always
    build:
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:3000"
    env_file:
      - .env
    environment:
      NODE_ENV: development
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_data: { }

networks:
  app-network:
    driver: bridge